{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Subscription ID for the resources"
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Function App"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the Function App"
      }
    },
    "storageBlobContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the blob container for deployment packages"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing storage account"
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "SKU tier for the App Service Plan (e.g., FlexConsumption)"
      }
    },
    "skuCode": {
      "type": "string",
      "metadata": {
        "description": "SKU code for the App Service Plan (e.g., FC1)"
      }
    },
    "workerSize": {
      "type": "string",
      "metadata": {
        "description": "Worker size for the App Service Plan"
      }
    },
    "workerSizeId": {
      "type": "string",
      "metadata": {
        "description": "Worker size ID for the App Service Plan"
      }
    },
    "numberOfWorkers": {
      "type": "string",
      "metadata": {
        "description": "Number of workers for the App Service Plan"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "serverFarmResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource group for the App Service Plan and Function App"
      }
    },
    "alwaysOn": {
      "type": "bool",
      "metadata": {
        "description": "Whether Always On is enabled for the Function App"
      }
    },
    "workspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Log Analytics workspace for Application Insights"
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2022-09-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "kind": "linux",
      "tags": {},
      "dependsOn": [],
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "workerSize": "[parameters('workerSize')]",
        "workerSizeId": "[parameters('workerSizeId')]",
        "numberOfWorkers": "[parameters('numberOfWorkers')]",
        "reserved": true,
        "zoneRedundant": false
      },
      "sku": {
        "Tier": "[parameters('sku')]",
        "Name": "[parameters('skuCode')]"
      }
    },
    {
      "apiVersion": "2020-02-02",
      "name": "[parameters('name')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {},
      "dependsOn": [],
      "properties": {
        "ApplicationId": "[parameters('name')]",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "Flow_Type": "Redfield",
        "Application_Type": "web",
        "WorkspaceResourceId": "[parameters('workspaceResourceId')]",
        "DisableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "StorageBlobContainerTemplate",
      "resourceGroup": "[parameters('serverFarmResourceGroup')]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.1",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('storageAccountName'), '/default')]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "dependsOn": []
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[concat(parameters('storageAccountName'), '/default/', parameters('storageBlobContainerName'))]",
              "dependsOn": [
                "[resourceId(parameters('serverFarmResourceGroup'), 'Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2023-12-01",
      "name": "[parameters('name')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp,linux",
      "location": "[parameters('location')]",
      "tags": {
        "hidden-link: /app-insights-resource-id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Insights/components/', parameters('name'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('name'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[concat('Microsoft.Resources/deployments/', 'StorageBlobContainerTemplate')]"
      ],
      "properties": {
        "name": "[parameters('name')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DEPLOYMENT_STORAGE_CONNECTION_STRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId(parameters('serverFarmResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, ';EndpointSuffix=', 'core.windows.net')]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId(parameters('serverFarmResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, ';EndpointSuffix=', 'core.windows.net')]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          }
        },
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": null,
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobContainer",
              "value": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/', parameters('storageBlobContainerName'))]",
              "authentication": {
                "type": "StorageAccountConnectionString",
                "storageAccountConnectionStringName": "DEPLOYMENT_STORAGE_CONNECTION_STRING"
              }
            }
          },
          "scaleAndConcurrency": {
            "maximumInstanceCount": 100,
            "instanceMemoryMB": 2048
          },
          "runtime": {
            "name": "python",
            "version": "3.11"
          }
        },
        "publicNetworkAccess": "Enabled",
        "httpsOnly": true,
        "serverFarmId": "[resourceId(parameters('serverFarmResourceGroup'), 'Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
          "apiVersion": "2022-09-01",
          "name": "[concat(parameters('name'), '/scm')]",
          "properties": {
            "allow": false
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('name'))]"
          ]
        },
        {
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
          "apiVersion": "2022-09-01",
          "name": "[concat(parameters('name'), '/ftp')]",
          "properties": {
            "allow": false
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('name'))]"
          ]
        }
      ]
    }
  ]
}