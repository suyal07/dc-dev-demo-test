{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroups": {
      "type": "array",
      "metadata": {
        "description": "List of resource groups to deploy"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "dc-demo-dev-core-test-kv",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "datacatalyst-demo-dev-core-test-rg",
      "metadata": {
        "description": "Resource group where the Key Vault will be deployed"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "uksouth",
      "metadata": {
        "description": "Location for the Key Vault"
      }
    }
  },
  "variables": {
    "tenantId": "[subscription().tenantId]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroups')[copyIndex()].name]",
      "location": "[parameters('resourceGroups')[copyIndex()].location]",
      "copy": {
        "name": "resourceGroupCopy",
        "count": "[length(parameters('resourceGroups'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeployment",
      "resourceGroup": "[parameters('keyVaultResourceGroup')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', parameters('keyVaultResourceGroup'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[variables('tenantId')]",
                "enableSoftDelete": true,
                "enablePurgeProtection": true,
                "accessPolicies": []
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId(subscription().subscriptionId, parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
    }
  }
}