{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccounts": {
      "type": "array",
      "metadata": {
        "description": "List of storage accounts to deploy"
      }
    },
    "sqlServers": {
      "type": "array",
      "metadata": {
        "description": "List of SQL servers and databases to deploy"
      }
    },
    "logAnalyticsWorkspaces": {
      "type": "array",
      "metadata": {
        "description": "List of Log Analytics workspaces to deploy"
      }
    },
    "containerApps": {
      "type": "array",
      "metadata": {
        "description": "List of container apps to deploy"
      }
    },
    "functionApps": {
      "type": "array",
      "metadata": {
        "description": "List of function apps to deploy"
      }
    },
    "virtualNetworks": {
      "type": "array",
      "metadata": {
        "description": "List of virtual networks to deploy"
      }
    },
    "apiManagementServices": {
      "type": "array",
      "metadata": {
        "description": "List of API Management services to deploy"
      }
    },
    "dashboards": {
      "type": "array",
      "metadata": {
        "description": "List of dashboards to deploy"
      }
    },
    "logicApps": {
      "type": "array",
      "metadata": {
        "description": "List of Logic Apps to deploy"
      }
    },
    "actionGroups": {
      "type": "array",
      "metadata": {
        "description": "List of Action Groups to deploy"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "dc-demo-dev-core-test-kv",
      "metadata": {
        "description": "Name of the Key Vault containing SQL credentials"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "datacatalyst-demo-dev-core-test-rg",
      "metadata": {
        "description": "Resource group of the Key Vault"
      }
    },
    "keyVaultSubscriptionId": {
      "type": "string",
      "defaultValue": "931b98ea-0e07-4d52-a37a-3b8fa4985688",
      "metadata": {
        "description": "Subscription ID of the Key Vault"
      }
    }
  },
  "variables": {
    "sqlServerTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/sqlServer.json",
    "logAnalyticsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/logAnalytics.json",
    "containerAppsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/containerApps.json",
    "vnetTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/vnet.json",
    "apimTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/apim.json",
    "logicAppsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/logicApps.json",
    "alertsLogicAppTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/alertsLogicApp.json",
    "functionAppTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/functionApp.json",
    "apiUsageAnalyticsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/APIUsageAnalytics.json",
    "platformCostInsightsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/PlatformCostInsights.json",
    "actionGroupApimTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/actionGroupApim.json",
    "sqlAdminLoginSecretName": "mw-sql-server-admin-user",
    "sqlAdminPasswordSecretName": "mw-sql-server-admin-password",
    "keyVaultId": "[resourceId(parameters('keyVaultSubscriptionId'), parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccounts')[copyIndex()].name]",
      "location": "[parameters('storageAccounts')[copyIndex()].location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot",
        "isHnsEnabled": false
      },
      "copy": {
        "name": "storageAccountCopy",
        "count": "[length(parameters('storageAccounts'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('storageAccounts')[copyIndex()].name, '/default')]",
      "dependsOn": [
        "[parameters('storageAccounts')[copyIndex()].name]"
      ],
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": "[parameters('storageAccounts')[copyIndex()].blobSoftDeleteRetentionDays]"
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": "[parameters('storageAccounts')[copyIndex()].containerSoftDeleteRetentionDays]"
        }
      },
      "copy": {
        "name": "blobServicesCopy",
        "count": "[length(parameters('storageAccounts'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('sqlServer-', copyIndex())]",
      "resourceGroup": "[parameters('sqlServers')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "sqlServerCopy",
        "count": "[length(parameters('sqlServers'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlServerTemplateUrl')]"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlServerName]"
          },
          "administratorLogin": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultId')]"
              },
              "secretName": "[variables('sqlAdminLoginSecretName')]"
            }
          },
          "administratorLoginPassword": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultId')]"
              },
              "secretName": "[variables('sqlAdminPasswordSecretName')]"
            }
          },
          "sqlDatabaseName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlDatabaseName]"
          },
          "databaseEdition": {
            "value": "[parameters('sqlServers')[copyIndex()].databaseEdition]"
          },
          "requestedServiceObjectiveName": {
            "value": "[parameters('sqlServers')[copyIndex()].requestedServiceObjectiveName]"
          },
          "maxSizeBytes": {
            "value": "[parameters('sqlServers')[copyIndex()].maxSizeBytes]"
          },
          "collation": {
            "value": "[parameters('sqlServers')[copyIndex()].collation]"
          },
          "backupRetentionDays": {
            "value": "[parameters('sqlServers')[copyIndex()].backupRetentionDays]"
          },
          "backupStorageRedundancy": {
            "value": "[parameters('sqlServers')[copyIndex()].backupStorageRedundancy]"
          },
          "location": {
            "value": "[parameters('sqlServers')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('logAnalyticsWorkspace-', copyIndex())]",
      "resourceGroup": "[parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "logAnalyticsWorkspaceCopy",
        "count": "[length(parameters('logAnalyticsWorkspaces'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('logAnalyticsTemplateUrl')]"
        },
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "location": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('containerApp-', copyIndex())]",
      "resourceGroup": "[parameters('containerApps')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "containerAppCopy",
        "count": "[length(parameters('containerApps'))]"
      },
      "dependsOn": [
        "logAnalyticsWorkspaceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('containerAppsTemplateUrl')]"
        },
        "parameters": {
          "containerAppName": {
            "value": "[parameters('containerApps')[copyIndex()].containerAppName]"
          },
          "location": {
            "value": "[parameters('containerApps')[copyIndex()].location]"
          },
          "environmentName": {
            "value": "[parameters('containerApps')[copyIndex()].environmentName]"
          },
          "minReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].minReplicas]"
          },
          "maxReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].maxReplicas]"
          },
          "databaseConnectionString": {
            "value": "[concat('Server=tcp:datacatalyst-demo-dev-src-test-sqlserver.database.windows.net,1433;Initial Catalog=datacatalyst-demo-dev-src-test-sqldb;Persist Security Info=False;User ID=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), variables('sqlAdminLoginSecretName')), '2023-07-01').secretUriWithVersion, ';Password=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), variables('sqlAdminPasswordSecretName')), '2023-07-01').secretUriWithVersion, ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
          },
          "configPath": {
            "value": "[parameters('containerApps')[copyIndex()].configPath]"
          },
          "containerImage": {
            "value": "[parameters('containerApps')[copyIndex()].containerImage]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[0].logAnalyticsWorkspaceName]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('functionApp-', copyIndex())]",
      "resourceGroup": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]",
      "copy": {
        "name": "functionAppCopy",
        "count": "[length(parameters('functionApps'))]"
      },
      "dependsOn": [
        "storageAccountCopy",
        "blobServicesCopy",
        "logAnalyticsWorkspaceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('functionAppTemplateUrl')]"
        },
        "parameters": {
          "subscriptionId": {
            "value": "[parameters('functionApps')[copyIndex()].subscriptionId]"
          },
          "name": {
            "value": "[parameters('functionApps')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('functionApps')[copyIndex()].location]"
          },
          "storageBlobContainerName": {
            "value": "[parameters('functionApps')[copyIndex()].storageBlobContainerName]"
          },
          "storageAccountName": {
            "value": "[parameters('functionApps')[copyIndex()].storageAccountName]"
          },
          "sku": {
            "value": "[parameters('functionApps')[copyIndex()].sku]"
          },
          "skuCode": {
            "value": "[parameters('functionApps')[copyIndex()].skuCode]"
          },
          "workerSize": {
            "value": "[parameters('functionApps')[copyIndex()].workerSize]"
          },
          "workerSizeId": {
            "value": "[parameters('functionApps')[copyIndex()].workerSizeId]"
          },
          "numberOfWorkers": {
            "value": "[parameters('functionApps')[copyIndex()].numberOfWorkers]"
          },
          "hostingPlanName": {
            "value": "[parameters('functionApps')[copyIndex()].hostingPlanName]"
          },
          "serverFarmResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]"
          },
          "alwaysOn": {
            "value": "[parameters('functionApps')[copyIndex()].alwaysOn]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "logAnalyticsWorkspaceResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceResourceGroup]"
          },
          "workspaceResourceId": {
            "value": "[resourceId(parameters('functionApps')[copyIndex()].subscriptionId, parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceResourceGroup, 'Microsoft.OperationalInsights/workspaces', parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceName)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('virtualNetwork-', copyIndex())]",
      "resourceGroup": "[parameters('virtualNetworks')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "virtualNetworkCopy",
        "count": "[length(parameters('virtualNetworks'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUrl')]"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualNetworks')[copyIndex()].vnetName]"
          },
          "location": {
            "value": "[parameters('virtualNetworks')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('apiManagementService-', copyIndex())]",
      "resourceGroup": "[parameters('apiManagementServices')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "apiManagementServiceCopy",
        "count": "[length(parameters('apiManagementServices'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apimTemplateUrl')]"
        },
        "parameters": {
          "apimServiceName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].apimServiceName]"
          },
          "location": {
            "value": "[parameters('apiManagementServices')[copyIndex()].location]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherEmail]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherName]"
          },
          "skuName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuName]"
          },
          "skuCapacity": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuCapacity]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dashboard-0",
      "resourceGroup": "[parameters('dashboards')[0].resourceGroup]",
      "dependsOn": [
        "logAnalyticsWorkspaceCopy",
        "apiManagementServiceCopy"
      ],
      "condition": "[greaterOrEquals(length(parameters('dashboards')), 1)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apiUsageAnalyticsTemplateUrl')]"
        },
        "parameters": {
          "subscriptionReference": {
            "value": "[parameters('dashboards')[0].subscriptionReference]"
          },
          "coreResourceGroup": {
            "value": "[parameters('dashboards')[0].coreResourceGroup]"
          },
          "apiManagementResourceName": {
            "value": "[parameters('dashboards')[0].apiManagementResourceName]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('dashboards')[0].logAnalyticsWorkspaceName]"
          },
          "dashboardDisplayName": {
            "value": "[parameters('dashboards')[0].dashboardDisplayName]"
          },
          "dashboardName": {
            "value": "[parameters('dashboards')[0].dashboardName]"
          },
          "location": {
            "value": "[parameters('dashboards')[0].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dashboard-1",
      "resourceGroup": "[parameters('dashboards')[1].resourceGroup]",
      "dependsOn": [
        "logAnalyticsWorkspaceCopy",
        "apiManagementServiceCopy"
      ],
      "condition": "[greaterOrEquals(length(parameters('dashboards')), 2)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('platformCostInsightsTemplateUrl')]"
        },
        "parameters": {
          "subscriptionReference": {
            "value": "[parameters('dashboards')[1].subscriptionReference]"
          },
          "subscriptionName": {
            "value": "[parameters('dashboards')[1].subscriptionName]"
          },
          "resourceGroupList": {
            "value": "[parameters('dashboards')[1].resourceGroupList]"
          },
          "domainName": {
            "value": "[parameters('dashboards')[1].domainName]"
          },
          "dashboardDisplayName": {
            "value": "[parameters('dashboards')[1].dashboardDisplayName]"
          },
          "dashboardName": {
            "value": "[parameters('dashboards')[1].dashboardName]"
          },
          "location": {
            "value": "[parameters('dashboards')[1].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logicApp-0",
      "resourceGroup": "[split(parameters('logicApps')[0].office365ConnectionExternalId, '/')[4]]",
      "condition": "[greaterOrEquals(length(parameters('logicApps')), 1)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('logicAppsTemplateUrl')]"
        },
        "parameters": {
          "workflows_datacatalyst_core_la_name": {
            "value": "[parameters('logicApps')[0].workflows_datacatalyst_core_la_name]"
          },
          "office365ConnectionExternalId": {
            "value": "[parameters('logicApps')[0].office365ConnectionExternalId]"
          },
          "subscriptionId": {
            "value": "[parameters('logicApps')[0].subscriptionId]"
          },
          "resourceLocation": {
            "value": "[parameters('logicApps')[0].resourceLocation]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logicApp-1",
      "resourceGroup": "[split(parameters('logicApps')[1].office365ConnectionExternalId, '/')[4]]",
      "condition": "[greaterOrEquals(length(parameters('logicApps')), 2)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('alertsLogicAppTemplateUrl')]"
        },
        "parameters": {
          "logicAppName": {
            "value": "[parameters('logicApps')[1].logicAppName]"
          },
          "office365ConnectionExternalId": {
            "value": "[parameters('logicApps')[1].office365ConnectionExternalId]"
          },
          "recipientEmailAddresses": {
            "value": "[parameters('logicApps')[1].recipientEmailAddresses]"
          },
          "subscriptionId": {
            "value": "[parameters('logicApps')[1].subscriptionId]"
          },
          "resourceLocation": {
            "value": "[parameters('logicApps')[1].resourceLocation]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('actionGroup-', copyIndex())]",
      "resourceGroup": "[split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4]]",
      "copy": {
        "name": "actionGroupCopy",
        "count": "[length(parameters('actionGroups'))]"
      },
      "dependsOn": [
        "logicApp-1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('actionGroupApimTemplateUrl')]"
        },
        "parameters": {
          "actionGroupName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupName]"
          },
          "actionGroupShortName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupShortName]"
          },
          "logicAppResourceId": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppResourceId]"
          },
          "logicAppCallbackUrl": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppCallbackUrl]"
          }
        }
      }
    }
  ],
  "outputs": {
    "workspaceResourceId": {
      "type": "string",
      "value": "[reference(concat('logAnalyticsWorkspace-', 0)).outputs.workspaceResourceId.value]"
    }
  }
}