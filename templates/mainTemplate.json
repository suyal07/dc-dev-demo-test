{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroups": {
      "type": "array",
      "metadata": {
        "description": "List of resource groups to deploy"
      }
    },
    "storageAccounts": {
      "type": "array",
      "metadata": {
        "description": "List of storage accounts to deploy"
      }
    },
    "sqlServers": {
      "type": "array",
      "metadata": {
        "description": "List of SQL servers and databases to deploy"
      }
    },
    "logAnalyticsWorkspaces": {
      "type": "array",
      "metadata": {
        "description": "List of Log Analytics workspaces to deploy"
      }
    },
    "containerApps": {
      "type": "array",
      "metadata": {
        "description": "List of container apps to deploy"
      }
    },
    "functionApps": {
      "type": "array",
      "metadata": {
        "description": "List of function apps to deploy"
      }
    },
    "virtualNetworks": {
      "type": "array",
      "metadata": {
        "description": "List of virtual networks to deploy"
      }
    },
    "apiManagementServices": {
      "type": "array",
      "metadata": {
        "description": "List of API Management services to deploy"
      }
    },
    "dashboards": {
      "type": "array",
      "metadata": {
        "description": "List of dashboards to deploy"
      }
    },
    "logicApps": {
      "type": "array",
      "metadata": {
        "description": "List of Logic Apps to deploy"
      }
    },
    "actionGroups": {
      "type": "array",
      "metadata": {
        "description": "List of Action Groups to deploy"
      }
    }
  },
  "variables": {
    "//": "Independent templates are for standalone resources with minimal dependencies",
    "githubIndependentUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/",
    "//": "Dependent templates are for resources with dependencies (e.g., on resource groups, storage accounts, etc.)",
    "githubDependentUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/",
    "resourceGroupLocations": {
      "[parameters('resourceGroups')[0].name]": "[parameters('resourceGroups')[0].location]",
      "[parameters('resourceGroups')[1].name]": "[parameters('resourceGroups')[1].location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroups')[copyIndex()].name]",
      "location": "[parameters('resourceGroups')[copyIndex()].location]",
      "copy": {
        "name": "resourceGroupCopy",
        "count": "[length(parameters('resourceGroups'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('storageAccount-', copyIndex())]",
      "copy": {
        "name": "storageAccountCopy",
        "count": "[length(parameters('storageAccounts'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('storageAccounts')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('storageAccounts')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'storageAccount.json')]"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccounts')[copyIndex()].name]"
          },
          "blobSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].blobSoftDeleteRetentionDays]"
          },
          "containerSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].containerSoftDeleteRetentionDays]"
          },
          "location": {
            "value": "[parameters('storageAccounts')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('sqlServer-', copyIndex())]",
      "copy": {
        "name": "sqlServerCopy",
        "count": "[length(parameters('sqlServers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('sqlServers')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('sqlServers')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'sqlServer.json')]"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlServerName]"
          },
          "administratorLogin": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLogin]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLoginPassword]"
          },
          "sqlDatabaseName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlDatabaseName]"
          },
          "databaseEdition": {
            "value": "[parameters('sqlServers')[copyIndex()].databaseEdition]"
          },
          "requestedServiceObjectiveName": {
            "value": "[parameters('sqlServers')[copyIndex()].requestedServiceObjectiveName]"
          },
          "maxSizeBytes": {
            "value": "[parameters('sqlServers')[copyIndex()].maxSizeBytes]"
          },
          "collation": {
            "value": "[parameters('sqlServers')[copyIndex()].collation]"
          },
          "backupRetentionDays": {
            "value": "[parameters('sqlServers')[copyIndex()].backupRetentionDays]"
          },
          "backupStorageRedundancy": {
            "value": "[parameters('sqlServers')[copyIndex()].backupStorageRedundancy]"
          },
          "location": {
            "value": "[parameters('sqlServers')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('logAnalyticsWorkspace-', copyIndex())]",
      "copy": {
        "name": "logAnalyticsWorkspaceCopy",
        "count": "[length(parameters('logAnalyticsWorkspaces'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'logAnalytics.json')]"
        },
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].logAnalyticsWorkspaceName]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('containerApp-', copyIndex())]",
      "copy": {
        "name": "containerAppCopy",
        "count": "[length(parameters('containerApps'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('containerApps')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('containerApps')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'containerApps.json')]"
        },
        "parameters": {
          "containerAppName": {
            "value": "[parameters('containerApps')[copyIndex()].containerAppName]"
          },
          "location": {
            "value": "[parameters('containerApps')[copyIndex()].location]"
          },
          "environmentName": {
            "value": "[parameters('containerApps')[copyIndex()].environmentName]"
          },
          "minReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].minReplicas]"
          },
          "maxReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].maxReplicas]"
          },
          "databaseConnectionString": {
            "value": "[parameters('containerApps')[copyIndex()].databaseConnectionString]"
          },
          "configPath": {
            "value": "[parameters('containerApps')[copyIndex()].configPath]"
          },
          "containerImage": {
            "value": "[parameters('containerApps')[copyIndex()].containerImage]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('functionApp-', copyIndex())]",
      "copy": {
        "name": "functionAppCopy",
        "count": "[length(parameters('functionApps'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('functionApps')[copyIndex()].serverFarmResourceGroup)]",
        "storageAccountCopy",
        "logAnalyticsWorkspaceCopy"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubDependentUrl'), 'functionApp.json')]"
        },
        "parameters": {
          "subscriptionId": {
            "value": "[parameters('functionApps')[copyIndex()].subscriptionId]"
          },
          "name": {
            "value": "[parameters('functionApps')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('functionApps')[copyIndex()].location]"
          },
          "storageBlobContainerName": {
            "value": "[parameters('functionApps')[copyIndex()].storageBlobContainerName]"
          },
          "storageAccountName": {
            "value": "[parameters('functionApps')[copyIndex()].storageAccountName]"
          },
          "sku": {
            "value": "[parameters('functionApps')[copyIndex()].sku]"
          },
          "skuCode": {
            "value": "[parameters('functionApps')[copyIndex()].skuCode]"
          },
          "workerSize": {
            "value": "[parameters('functionApps')[copyIndex()].workerSize]"
          },
          "workerSizeId": {
            "value": "[parameters('functionApps')[copyIndex()].workerSizeId]"
          },
          "numberOfWorkers": {
            "value": "[parameters('functionApps')[copyIndex()].numberOfWorkers]"
          },
          "hostingPlanName": {
            "value": "[parameters('functionApps')[copyIndex()].hostingPlanName]"
          },
          "serverFarmResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]"
          },
          "alwaysOn": {
            "value": "[parameters('functionApps')[copyIndex()].alwaysOn]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "logAnalyticsWorkspaceResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceResourceGroup]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('virtualNetwork-', copyIndex())]",
      "copy": {
        "name": "virtualNetworkCopy",
        "count": "[length(parameters('virtualNetworks'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('virtualNetworks')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('virtualNetworks')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'vnet.json')]"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualNetworks')[copyIndex()].vnetName]"
          },
          "location": {
            "value": "[parameters('virtualNetworks')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('apiManagementService-', copyIndex())]",
      "copy": {
        "name": "apiManagementServiceCopy",
        "count": "[length(parameters('apiManagementServices'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('apiManagementServices')[copyIndex()].resourceGroup)]"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('apiManagementServices')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'apim.json')]"
        },
        "parameters": {
          "apimServiceName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].apimServiceName]"
          },
          "location": {
            "value": "[parameters('apiManagementServices')[copyIndex()].location]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherEmail]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherName]"
          },
          "skuName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuName]"
          },
          "skuCapacity": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuCapacity]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('dashboard-', copyIndex())]",
      "copy": {
        "name": "dashboardCopy",
        "count": "[length(parameters('dashboards'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('dashboards')[copyIndex()].resourceGroup)]",
        "logAnalyticsWorkspaceCopy",
        "apiManagementServiceCopy"
      ],
      "location": "[variables('resourceGroupLocations')[parameters('dashboards')[copyIndex()].resourceGroup]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), concat(variables('githubDependentUrl'), 'APIUsageAnalytics.json'), concat(variables('githubDependentUrl'), 'PlatformCostInsights.json'))]"
        },
        "parameters": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), json(concat('{\"subscriptionReference\": {\"value\": \"', parameters('dashboards')[copyIndex()].subscriptionReference, '\"}, \"coreResourceGroup\": {\"value\": \"', parameters('dashboards')[copyIndex()].coreResourceGroup, '\"}, \"apiManagementResourceName\": {\"value\": \"', parameters('dashboards')[copyIndex()].apiManagementResourceName, '\"}, \"logAnalyticsWorkspaceName\": {\"value\": \"', parameters('dashboards')[copyIndex()].logAnalyticsWorkspaceName, '\"}, \"dashboardDisplayName\": {\"value\": \"', parameters('dashboards')[copyIndex()].dashboardDisplayName, '\"}, \"dashboardName\": {\"value\": \"', parameters('dashboards')[copyIndex()].dashboardName, '\"}, \"location\": {\"value\": \"', parameters('dashboards')[copyIndex()].location, '\"}}')), json(concat('{\"subscriptionReference\": {\"value\": \"', parameters('dashboards')[copyIndex()].subscriptionReference, '\"}, \"subscriptionName\": {\"value\": \"', parameters('dashboards')[copyIndex()].subscriptionName, '\"}, \"resourceGroupList\": {\"value\": \"', parameters('dashboards')[copyIndex()].resourceGroupList, '\"}, \"domainName\": {\"value\": \"', parameters('dashboards')[copyIndex()].domainName, '\"}, \"dashboardDisplayName\": {\"value\": \"', parameters('dashboards')[copyIndex()].dashboardDisplayName, '\"}, \"dashboardName\": {\"value\": \"', parameters('dashboards')[copyIndex()].dashboardName, '\"}, \"location\": {\"value\": \"', parameters('dashboards')[copyIndex()].location, '\"}}')))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(equals(copyIndex(), 0), concat('logicApp-', copyIndex()), '')]",
      "condition": "[equals(copyIndex(), 0)]",
      "copy": {
        "name": "logicAppCopy",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', split(parameters('logicApps')[0].connections_office365_externalid, '/')[4])]"
      ],
      "location": "[variables('resourceGroupLocations')[split(parameters('logicApps')[0].connections_office365_externalid, '/')[4]]]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'logicApps.json')]"
        },
        "parameters": {
          "workflows_datacatalyst_demo_core_la_name": {
            "value": "[parameters('logicApps')[0].workflows_datacatalyst_demo_core_la_name]"
          },
          "connections_office365_externalid": {
            "value": "[parameters('logicApps')[0].connections_office365_externalid]"
          },
          "subscriptionId": {
            "value": "[parameters('logicApps')[0].subscriptionId]"
          },
          "resourceLocation": {
            "value": "[parameters('logicApps')[0].resourceLocation]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(equals(copyIndex(), 1), concat('alertsLogicApp-', copyIndex()), '')]",
      "condition": "[equals(copyIndex(), 1)]",
      "copy": {
        "name": "alertsLogicAppCopy",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', split(parameters('logicApps')[1].office365ConnectionExternalId, '/')[4])]",
        "logicAppCopy"
      ],
      "location": "[variables('resourceGroupLocations')[split(parameters('logicApps')[1].office365ConnectionExternalId, '/')[4])]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubIndependentUrl'), 'alertsLogicApp.json')]"
        },
        "parameters": {
          "logicAppName": {
            "value": "[parameters('logicApps')[1].logicAppName]"
          },
          "office365ConnectionExternalId": {
            "value": "[parameters('logicApps')[1].office365ConnectionExternalId]"
          },
          "recipientEmailAddresses": {
            "value": "[parameters('logicApps')[1].recipientEmailAddresses]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('actionGroup-', copyIndex())]",
      "copy": {
        "name": "actionGroupCopy",
        "count": "[length(parameters('actionGroups'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4])]",
        "logicAppCopy",
        "alertsLogicAppCopy"
      ],
      "location": "[if(contains(variables('resourceGroupLocations'), split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4]), variables('resourceGroupLocations')[split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4]], parameters('resourceGroups')[0].location)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubDependentUrl'), 'actionGroupApim.json')]"
        },
        "parameters": {
          "actionGroupName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupName]"
          },
          "actionGroupShortName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupShortName]"
          },
          "logicAppResourceId": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppResourceId]"
          },
          "logicAppCallbackUrl": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppCallbackUrl]"
          }
        }
      }
    }
  ]
}