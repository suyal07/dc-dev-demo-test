{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroups": {
      "type": "array",
      "metadata": {
        "description": "List of resource groups to deploy"
      }
    },
    "storageAccounts": {
      "type": "array",
      "metadata": {
        "description": "List of storage accounts to deploy"
      }
    },
    "sqlServers": {
      "type": "array",
      "metadata": {
        "description": "List of SQL servers and databases to deploy"
      }
    },
    "logAnalyticsWorkspaces": {
      "type": "array",
      "metadata": {
        "description": "List of Log Analytics workspaces to deploy"
      }
    },
    "containerApps": {
      "type": "array",
      "metadata": {
        "description": "List of container apps to deploy"
      }
    },
    "functionApps": {
      "type": "array",
      "metadata": {
        "description": "List of function apps to deploy"
      }
    },
    "virtualNetworks": {
      "type": "array",
      "metadata": {
        "description": "List of virtual networks to deploy"
      }
    },
    "apiManagementServices": {
      "type": "array",
      "metadata": {
        "description": "List of API Management services to deploy"
      }
    },
    "dashboards": {
      "type": "array",
      "metadata": {
        "description": "List of dashboards to deploy"
      }
    },
    "logicApps": {
      "type": "array",
      "metadata": {
        "description": "List of Logic Apps to deploy"
      }
    },
    "actionGroups": {
      "type": "array",
      "metadata": {
        "description": "List of Action Groups to deploy"
      }
    }
  },
  "variables": {
    "storageAccountTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/storageAccount.json",
    "sqlServerTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/sqlServer.json",
    "logAnalyticsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/logAnalytics.json",
    "containerAppsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/containerApps.json",
    "vnetTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/vnet.json",
    "apimTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/apim.json",
    "logicAppsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/logicApps.json",
    "alertsLogicAppTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/independent/alertsLogicApp.json",
    "functionAppTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/functionApp.json",
    "apiUsageAnalyticsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/APIUsageAnalytics.json",
    "platformCostInsightsTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/PlatformCostInsights.json",
    "actionGroupApimTemplateUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/actionGroupApim.json",
    "resourceGroupLocations": {
      "[parameters('resourceGroups')[0].name]": "[parameters('resourceGroups')[0].location]",
      "[parameters('resourceGroups')[1].name]": "[parameters('resourceGroups')[1].location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroups')[copyIndex()].name]",
      "location": "[parameters('resourceGroups')[copyIndex()].location]",
      "copy": {
        "name": "resourceGroupCopy",
        "count": "[length(parameters('resourceGroups'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('storageAccount-', copyIndex())]",
      "resourceGroup": "[parameters('storageAccounts')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "storageAccountCopy",
        "count": "[length(parameters('storageAccounts'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('storageAccounts')[copyIndex()].resourceGroup)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountTemplateUrl')]"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccounts')[copyIndex()].name]"
          },
          "blobSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].blobSoftDeleteRetentionDays]"
          },
          "containerSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].containerSoftDeleteRetentionDays]"
          },
          "location": {
            "value": "[parameters('storageAccounts')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('sqlServer-', copyIndex())]",
      "resourceGroup": "[parameters('sqlServers')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "sqlServerCopy",
        "count": "[length(parameters('sqlServers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('sqlServers')[copyIndex()].resourceGroup)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlServerTemplateUrl')]"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlServerName]"
          },
          "administratorLogin": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLogin]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLoginPassword]"
          },
          "sqlDatabaseName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlDatabaseName]"
          },
          "databaseEdition": {
            "value": "[parameters('sqlServers')[copyIndex()].databaseEdition]"
          },
          "requestedServiceObjectiveName": {
            "value": "[parameters('sqlServers')[copyIndex()].requestedServiceObjectiveName]"
          },
          "maxSizeBytes": {
            "value": "[parameters('sqlServers')[copyIndex()].maxSizeBytes]"
          },
          "collation": {
            "value": "[parameters('sqlServers')[copyIndex()].collation]"
          },
          "backupRetentionDays": {
            "value": "[parameters('sqlServers')[copyIndex()].backupRetentionDays]"
          },
          "backupStorageRedundancy": {
            "value": "[parameters('sqlServers')[copyIndex()].backupStorageRedundancy]"
          },
          "location": {
            "value": "[parameters('sqlServers')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('logAnalyticsWorkspace-', copyIndex())]",
      "resourceGroup": "[parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "logAnalyticsWorkspaceCopy",
        "count": "[length(parameters('logAnalyticsWorkspaces'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('logAnalyticsTemplateUrl')]"
        },
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "location": {
            "value": "[variables('resourceGroupLocations')[parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup]]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('containerApp-', copyIndex())]",
      "resourceGroup": "[parameters('containerApps')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "containerAppCopy",
        "count": "[length(parameters('containerApps'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('containerApps')[copyIndex()].resourceGroup)]",
        "logAnalyticsWorkspaceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('containerAppsTemplateUrl')]"
        },
        "parameters": {
          "containerAppName": {
            "value": "[parameters('containerApps')[copyIndex()].containerAppName]"
          },
          "location": {
            "value": "[parameters('containerApps')[copyIndex()].location]"
          },
          "environmentName": {
            "value": "[parameters('containerApps')[copyIndex()].environmentName]"
          },
          "minReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].minReplicas]"
          },
          "maxReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].maxReplicas]"
          },
          "databaseConnectionString": {
            "value": "[parameters('containerApps')[copyIndex()].databaseConnectionString]"
          },
          "configPath": {
            "value": "[parameters('containerApps')[copyIndex()].configPath]"
          },
          "containerImage": {
            "value": "[parameters('containerApps')[copyIndex()].containerImage]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[0].logAnalyticsWorkspaceName]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('functionApp-', copyIndex())]",
      "resourceGroup": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]",
      "copy": {
        "name": "functionAppCopy",
        "count": "[length(parameters('functionApps'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('functionApps')[copyIndex()].serverFarmResourceGroup)]",
        "storageAccountCopy",
        "logAnalyticsWorkspaceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('functionAppTemplateUrl')]"
        },
        "parameters": {
          "subscriptionId": {
            "value": "[parameters('functionApps')[copyIndex()].subscriptionId]"
          },
          "name": {
            "value": "[parameters('functionApps')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('functionApps')[copyIndex()].location]"
          },
          "storageBlobContainerName": {
            "value": "[parameters('functionApps')[copyIndex()].storageBlobContainerName]"
          },
          "storageAccountName": {
            "value": "[parameters('functionApps')[copyIndex()].storageAccountName]"
          },
          "storageAccountResourceGroup": {
            "value": "[parameters('storageAccounts')[indexOf(parameters('storageAccounts'), first(filter(parameters('storageAccounts'), lambda('item', equals(lambdaVariables('item').name, parameters('functionApps')[copyIndex()].storageAccountName)))))].resourceGroup]"
          },
          "blobSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[indexOf(parameters('storageAccounts'), first(filter(parameters('storageAccounts'), lambda('item', equals(lambdaVariables('item').name, parameters('functionApps')[copyIndex()].storageAccountName)))))].blobSoftDeleteRetentionDays]"
          },
          "containerSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[indexOf(parameters('storageAccounts'), first(filter(parameters('storageAccounts'), lambda('item', equals(lambdaVariables('item').name, parameters('functionApps')[copyIndex()].storageAccountName)))))].containerSoftDeleteRetentionDays]"
          },
          "sku": {
            "value": "[parameters('functionApps')[copyIndex()].sku]"
          },
          "skuCode": {
            "value": "[parameters('functionApps')[copyIndex()].skuCode]"
          },
          "workerSize": {
            "value": "[parameters('functionApps')[copyIndex()].workerSize]"
          },
          "workerSizeId": {
            "value": "[parameters('functionApps')[copyIndex()].workerSizeId]"
          },
          "numberOfWorkers": {
            "value": "[parameters('functionApps')[copyIndex()].numberOfWorkers]"
          },
          "hostingPlanName": {
            "value": "[parameters('functionApps')[copyIndex()].hostingPlanName]"
          },
          "serverFarmResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]"
          },
          "alwaysOn": {
            "value": "[parameters('functionApps')[copyIndex()].alwaysOn]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "logAnalyticsWorkspaceResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceResourceGroup]"
          },
          "workspaceResourceId": {
            "value": "[reference(concat('logAnalyticsWorkspace-', 0)).outputs.workspaceResourceId.value]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('virtualNetwork-', copyIndex())]",
      "resourceGroup": "[parameters('virtualNetworks')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "virtualNetworkCopy",
        "count": "[length(parameters('virtualNetworks'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('virtualNetworks')[copyIndex()].resourceGroup)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUrl')]"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualNetworks')[copyIndex()].vnetName]"
          },
          "location": {
            "value": "[parameters('virtualNetworks')[copyIndex()].location]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('apiManagementService-', copyIndex())]",
      "resourceGroup": "[parameters('apiManagementServices')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "apiManagementServiceCopy",
        "count": "[length(parameters('apiManagementServices'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('apiManagementServices')[copyIndex()].resourceGroup)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('apimTemplateUrl')]"
        },
        "parameters": {
          "apimServiceName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].apimServiceName]"
          },
          "location": {
            "value": "[parameters('apiManagementServices')[copyIndex()].location]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherEmail]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherName]"
          },
          "skuName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuName]"
          },
          "skuCapacity": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuCapacity]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('dashboard-', copyIndex())]",
      "resourceGroup": "[parameters('dashboards')[copyIndex()].resourceGroup]",
      "copy": {
        "name": "dashboardCopy",
        "count": "[length(parameters('dashboards'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', parameters('dashboards')[copyIndex()].resourceGroup)]",
        "logAnalyticsWorkspaceCopy",
        "apiManagementServiceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), variables('apiUsageAnalyticsTemplateUrl'), variables('platformCostInsightsTemplateUrl'))]"
        },
        "parameters": "[union(createObject('subscriptionReference', createObject('value', parameters('dashboards')[copyIndex()].subscriptionReference), 'dashboardDisplayName', createObject('value', parameters('dashboards')[copyIndex()].dashboardDisplayName), 'dashboardName', createObject('value', parameters('dashboards')[copyIndex()].dashboardName), 'location', createObject('value', parameters('dashboards')[copyIndex()].location)), if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), createObject('coreResourceGroup', createObject('value', parameters('dashboards')[copyIndex()].coreResourceGroup), 'apiManagementResourceName', createObject('value', parameters('dashboards')[copyIndex()].apiManagementResourceName), 'logAnalyticsWorkspaceName', createObject('value', parameters('dashboards')[copyIndex()].logAnalyticsWorkspaceName)), createObject()), if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'PlatformCostInsights'), createObject('subscriptionName', createObject('value', parameters('dashboards')[copyIndex()].subscriptionName), 'resourceGroupList', createObject('value', json(parameters('dashboards')[copyIndex()].resourceGroupList)), 'domainName', createObject('value', parameters('dashboards')[copyIndex()].domainName)), createObject()))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('logicApp-', copyIndex())]",
      "resourceGroup": "[split(parameters('logicApps')[copyIndex()].office365ConnectionExternalId, '/')[4]]",
      "copy": {
        "name": "logicAppCopy",
        "count": "[if(greaterOrEquals(length(parameters('logicApps')), 2), 2, length(parameters('logicApps')))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', split(parameters('logicApps')[copyIndex()].office365ConnectionExternalId, '/')[4])]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[if(equals(copyIndex(), 0), variables('logicAppsTemplateUrl'), variables('alertsLogicAppTemplateUrl'))]"
        },
        "parameters": "[union(createObject(if(equals(copyIndex(), 0), 'workflows_datacatalyst_core_la_name', 'logicAppName'), createObject('value', if(equals(copyIndex(), 0), parameters('logicApps')[copyIndex()].workflows_datacatalyst_core_la_name, parameters('logicApps')[copyIndex()].logicAppName)), 'office365ConnectionExternalId', createObject('value', parameters('logicApps')[copyIndex()].office365ConnectionExternalId), 'subscriptionId', createObject('value', parameters('logicApps')[copyIndex()].subscriptionId), 'resourceLocation', createObject('value', variables('resourceGroupLocations')[split(parameters('logicApps')[copyIndex()].office365ConnectionExternalId, '/')[4]]))), if(equals(copyIndex(), 1), createObject('recipientEmailAddresses', createObject('value', parameters('logicApps')[copyIndex()].recipientEmailAddresses)), createObject()))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('actionGroup-', copyIndex())]",
      "resourceGroup": "[split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4]]",
      "copy": {
        "name": "actionGroupCopy",
        "count": "[length(parameters('actionGroups'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/resourceGroups/', split(parameters('actionGroups')[copyIndex()].logicAppResourceId, '/')[4])]",
        "logicAppCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('actionGroupApimTemplateUrl')]"
        },
        "parameters": {
          "actionGroupName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupName]"
          },
          "actionGroupShortName": {
            "value": "[parameters('actionGroups')[copyIndex()].actionGroupShortName]"
          },
          "logicAppResourceId": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppResourceId]"
          },
          "logicAppCallbackUrl": {
            "value": "[parameters('actionGroups')[copyIndex()].logicAppCallbackUrl]"
          }
        }
      }
    }
  ],
  "outputs": {
    "workspaceResourceId": {
      "type": "string",
      "value": "[reference(concat('logAnalyticsWorkspace-', 0)).outputs.workspaceResourceId.value]"
    }
  }
}