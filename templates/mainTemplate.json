{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroups": {
      "type": "array",
      "metadata": {
        "description": "List of resource groups to deploy"
      }
    },
    "storageAccounts": {
      "type": "array",
      "metadata": {
        "description": "List of storage accounts to deploy"
      }
    },
    "sqlServers": {
      "type": "array",
      "metadata": {
        "description": "List of SQL servers and databases to deploy"
      }
    },
    "logAnalyticsWorkspaces": {
      "type": "array",
      "metadata": {
        "description": "List of Log Analytics workspaces to deploy"
      }
    },
    "containerApps": {
      "type": "array",
      "metadata": {
        "description": "List of container apps to deploy"
      }
    },
    "functionApps": {
      "type": "array",
      "metadata": {
        "description": "List of function apps to deploy"
      }
    },
    "virtualNetworks": {
      "type": "array",
      "metadata": {
        "description": "List of virtual networks to deploy"
      }
    },
    "apiManagementServices": {
      "type": "array",
      "metadata": {
        "description": "List of API Management services to deploy"
      }
    },
    "dashboards": {
      "type": "array",
      "metadata": {
        "description": "List of dashboards to deploy"
      }
    }
  },
  "variables": {
    "githubBaseUrl": "https://raw.githubusercontent.com/suyal07/dc-dev-demo-test/main/templates/dependent/"
  },
  "resources": [
    // Deploy Resource Groups
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('resourceGroup-', copyIndex())]",
      "copy": {
        "name": "resourceGroupCopy",
        "count": "[length(parameters('resourceGroups'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'resourceGroup.json')]"
        },
        "parameters": {
          "name": {
            "value": "[parameters('resourceGroups')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('resourceGroups')[copyIndex()].location]"
          }
        }
      }
    },
    // Deploy Storage Accounts (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('storageAccount-', copyIndex())]",
      "copy": {
        "name": "storageAccountCopy",
        "count": "[length(parameters('storageAccounts'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'storageAccount.json')]"
        },
        "parameters": {
          "name": {
            "value": "[parameters('storageAccounts')[copyIndex()].name]"
          },
          "resourceGroup": {
            "value": "[parameters('storageAccounts')[copyIndex()].resourceGroup]"
          },
          "blobSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].blobSoftDeleteRetentionDays]"
          },
          "containerSoftDeleteRetentionDays": {
            "value": "[parameters('storageAccounts')[copyIndex()].containerSoftDeleteRetentionDays]"
          }
        }
      }
    },
    // Deploy SQL Servers and Databases (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('sqlServer-', copyIndex())]",
      "copy": {
        "name": "sqlServerCopy",
        "count": "[length(parameters('sqlServers'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'sqlServer.json')]"
        },
        "parameters": {
          "sqlServerName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlServerName]"
          },
          "resourceGroup": {
            "value": "[parameters('sqlServers')[copyIndex()].resourceGroup]"
          },
          "administratorLogin": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLogin]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('sqlServers')[copyIndex()].administratorLoginPassword]"
          },
          "sqlDatabaseName": {
            "value": "[parameters('sqlServers')[copyIndex()].sqlDatabaseName]"
          },
          "databaseEdition": {
            "value": "[parameters('sqlServers')[copyIndex()].databaseEdition]"
          },
          "requestedServiceObjectiveName": {
            "value": "[parameters('sqlServers')[copyIndex()].requestedServiceObjectiveName]"
          },
          "maxSizeBytes": {
            "value": "[parameters('sqlServers')[copyIndex()].maxSizeBytes]"
          },
          "collation": {
            "value": "[parameters('sqlServers')[copyIndex()].collation]"
          },
          "backupRetentionDays": {
            "value": "[parameters('sqlServers')[copyIndex()].backupRetentionDays]"
          },
          "backupStorageRedundancy": {
            "value": "[parameters('sqlServers')[copyIndex()].backupStorageRedundancy]"
          }
        }
      }
    },
    // Deploy Log Analytics Workspaces (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('logAnalyticsWorkspace-', copyIndex())]",
      "copy": {
        "name": "logAnalyticsWorkspaceCopy",
        "count": "[length(parameters('logAnalyticsWorkspaces'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'logAnalyticsWorkspace.json')]"
        },
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "resourceGroup": {
            "value": "[parameters('logAnalyticsWorkspaces')[copyIndex()].resourceGroup]"
          }
        }
      }
    },
    // Deploy Container Apps (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('containerApp-', copyIndex())]",
      "copy": {
        "name": "containerAppCopy",
        "count": "[length(parameters('containerApps'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'containerApp.json')]"
        },
        "parameters": {
          "containerAppName": {
            "value": "[parameters('containerApps')[copyIndex()].containerAppName]"
          },
          "resourceGroup": {
            "value": "[parameters('containerApps')[copyIndex()].resourceGroup]"
          },
          "location": {
            "value": "[parameters('containerApps')[copyIndex()].location]"
          },
          "environmentName": {
            "value": "[parameters('containerApps')[copyIndex()].environmentName]"
          },
          "minReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].minReplicas]"
          },
          "maxReplicas": {
            "value": "[parameters('containerApps')[copyIndex()].maxReplicas]"
          },
          "databaseConnectionString": {
            "value": "[parameters('containerApps')[copyIndex()].databaseConnectionString]"
          },
          "configPath": {
            "value": "[parameters('containerApps')[copyIndex()].configPath]"
          },
          "containerImage": {
            "value": "[parameters('containerApps')[copyIndex()].containerImage]"
          }
        }
      }
    },
    // Deploy Function Apps (depends on Resource Groups, Storage Accounts, Log Analytics)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('functionApp-', copyIndex())]",
      "copy": {
        "name": "functionAppCopy",
        "count": "[length(parameters('functionApps'))]"
      },
      "dependsOn": [
        "resourceGroupCopy",
        "storageAccountCopy",
        "logAnalyticsWorkspaceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'functionApp.json')]"
        },
        "parameters": {
          "subscriptionId": {
            "value": "[parameters('functionApps')[copyIndex()].subscriptionId]"
          },
          "name": {
            "value": "[parameters('functionApps')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('functionApps')[copyIndex()].location]"
          },
          "storageBlobContainerName": {
            "value": "[parameters('functionApps')[copyIndex()].storageBlobContainerName]"
          },
          "storageAccountName": {
            "value": "[parameters('functionApps')[copyIndex()].storageAccountName]"
          },
          "sku": {
            "value": "[parameters('functionApps')[copyIndex()].sku]"
          },
          "skuCode": {
            "value": "[parameters('functionApps')[copyIndex()].skuCode]"
          },
          "workerSize": {
            "value": "[parameters('functionApps')[copyIndex()].workerSize]"
          },
          "workerSizeId": {
            "value": "[parameters('functionApps')[copyIndex()].workerSizeId]"
          },
          "numberOfWorkers": {
            "value": "[parameters('functionApps')[copyIndex()].numberOfWorkers]"
          },
          "hostingPlanName": {
            "value": "[parameters('functionApps')[copyIndex()].hostingPlanName]"
          },
          "serverFarmResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].serverFarmResourceGroup]"
          },
          "alwaysOn": {
            "value": "[parameters('functionApps')[copyIndex()].alwaysOn]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceName]"
          },
          "logAnalyticsWorkspaceResourceGroup": {
            "value": "[parameters('functionApps')[copyIndex()].logAnalyticsWorkspaceResourceGroup]"
          }
        }
      }
    },
    // Deploy Virtual Networks (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('virtualNetwork-', copyIndex())]",
      "copy": {
        "name": "virtualNetworkCopy",
        "count": "[length(parameters('virtualNetworks'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'virtualNetwork.json')]"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualNetworks')[copyIndex()].vnetName]"
          },
          "location": {
            "value": "[parameters('virtualNetworks')[copyIndex()].location]"
          },
          "resourceGroup": {
            "value": "[parameters('virtualNetworks')[copyIndex()].resourceGroup]"
          }
        }
      }
    },
    // Deploy API Management Services (depends on Resource Groups)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('apiManagementService-', copyIndex())]",
      "copy": {
        "name": "apiManagementServiceCopy",
        "count": "[length(parameters('apiManagementServices'))]"
      },
      "dependsOn": [
        "resourceGroupCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('githubBaseUrl'), 'apiManagementService.json')]"
        },
        "parameters": {
          "apimServiceName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].apimServiceName]"
          },
          "location": {
            "value": "[parameters('apiManagementServices')[copyIndex()].location]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherEmail]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].publisherName]"
          },
          "skuName": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuName]"
          },
          "skuCapacity": {
            "value": "[parameters('apiManagementServices')[copyIndex()].skuCapacity]"
          },
          "resourceGroup": {
            "value": "[parameters('apiManagementServices')[copyIndex()].resourceGroup]"
          }
        }
      }
    },
    // Deploy Dashboards (depends on Resource Groups, Log Analytics, API Management for APIUsageAnalytics)
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[concat('dashboard-', copyIndex())]",
      "copy": {
        "name": "dashboardCopy",
        "count": "[length(parameters('dashboards'))]"
      },
      "dependsOn": [
        "resourceGroupCopy",
        "logAnalyticsWorkspaceCopy",
        "apiManagementServiceCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), concat(variables('githubBaseUrl'), 'dashboard.json'), concat(variables('githubBaseUrl'), 'platformCostInsightsDashboard.json'))]"
        },
        "parameters": {
          "subscriptionReference": {
            "value": "[parameters('dashboards')[copyIndex()].subscriptionReference]"
          },
          "coreResourceGroup": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), parameters('dashboards')[copyIndex()].coreResourceGroup, '')]"
          },
          "apiManagementResourceName": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), parameters('dashboards')[copyIndex()].apiManagementResourceName, '')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), parameters('dashboards')[copyIndex()].logAnalyticsWorkspaceName, '')]"
          },
          "subscriptionName": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'PlatformCostInsights'), 'DataCatalystDevSubscription', '')]"
          },
          "resourceGroupList": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'PlatformCostInsights'), array(parameters('resourceGroups')[0].name, parameters('resourceGroups')[1].name), array(''))]"
          },
          "domainName": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'PlatformCostInsights'), 'portal.azure.com', '')]"
          },
          "dashboardDisplayName": {
            "value": "[parameters('dashboards')[copyIndex()].dashboardDisplayName]"
          },
          "dashboardName": {
            "value": "[parameters('dashboards')[copyIndex()].dashboardName]"
          },
          "location": {
            "value": "[parameters('dashboards')[copyIndex()].location]"
          },
          "resourceGroup": {
            "value": "[if(equals(parameters('dashboards')[copyIndex()].dashboardName, 'API Tracker'), parameters('dashboards')[copyIndex()].resourceGroup, parameters('dashboards')[copyIndex()].resourceGroup)]"
          }
        }
      }
    }
  ]
}